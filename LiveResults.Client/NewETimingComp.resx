<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>